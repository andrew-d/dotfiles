# Syntax-highlight JSON strings or files
function json() {
    if [ -p /dev/stdin ]; then
        # piping, e.g. `echo '{"foo":42}' | json`
        python -mjson.tool | pygmentize -l javascript
    else
        # e.g. `json '{"foo":42}'`
        python -mjson.tool <<< "$*" | pygmentize -l javascript
    fi
}

# Escape UTF-8 characters into their 3-byte format
function escape() {
    printf "\\\x%s" $(printf "$@" | xxd -p -c1 -u)
    echo # newline
}

# Tunnel server for sshuttle
TUNNEL_SERVER=andrew@du.nham.ca:443

# Tunnel all traffic, including DNS.
alias tunnel="sshuttle --dns --daemon --pidfile=/tmp/sshuttle.pid --remote=$TUNNEL_SERVER 0/0"
alias tunnelx='[[ -f /tmp/sshuttle.pid ]] && kill $(cat /tmp/sshuttle.pid) && echo "Disconnected."'
alias tunnels='([[ -f /tmp/sshuttle.pid ]] && ps aux | grep $(cat /tmp/sshuttle.pid) | grep -v grep > /dev/null) && echo "Connected" || echo "Not Connected"'

# Get a list of IP addresses for the given domain(s).
function dns2ip() {
    dig +short $* | sed "/[^0-9\.]/d"
}

# Tunnel specific domain(s) only.
function tunonly() {
    sshuttle -vr $TNL_SERVER `dns2ip $*`;
}

# Tunnel everything except the given domain(s)
function tunbut() {
    sshuttle --dns -vr $TNL_SERVER `dns2ip $* | sed "s/^/-x/"` 0/0;
}

alias random_mac='sudo ifconfig en0 ether `openssl rand -hex 6 | sed "s/\(..\)/\1:/g; s/.$//"`'
alias restore_mac='sudo ifconfig en0 ether 10:40:f3:89:38:80'
